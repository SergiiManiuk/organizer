


// Create a theme with the specified color type and density.
// @function create-theme($type: light, $density: 0) {
//   @return mat.define-theme((
//     color: (
//       theme-type: $type,
//       primary: mat.$azure-palette,
//       tertiary: mat.$blue-palette,
//       use-system-variables: true,
//     ),
//     typography: (use-system-variables: true),
//     density: (
//       scale: $density
//     ),
//   ));
// }


// Define the default (light) theme.
                                                // $light-theme: create-theme($type: light);

// Create our dark theme.
                                                // $dark-theme: create-theme($type: dark);

// @include mat.core();

// html {
//   @include mat.all-component-themes($light-theme);
//   @include mat.system-level-colors($light-theme);
//   @include mat.system-level-typography($light-theme);
//   // TODO(mmalerba): Support M3 for experimental components.
//   // @include matx.column-resize-theme($light-theme);
//   // @include matx.popover-edit-theme($light-theme);
// }

// @include mat.typography-hierarchy($light-theme); 

// .demo-strong-focus {
//   // Note: we can theme the indicators directly through `strong-focus-indicators` as well.
//   // Use the theme so we have some coverage over the entire API surface.
//   @include mat.strong-focus-indicators();
//   @include mat.strong-focus-indicators-theme($light-theme);
// }

// .demo-unicorn-dark-theme {
//   // Include the dark theme color styles.
//   @include mat.all-component-colors($dark-theme);
//   @include mat.system-level-colors($dark-theme);
//   // TODO(mmalerba): Support M3 for experimental components.
//   // @include matx.column-resize-color($dark-theme);
//   // @include matx.popover-edit-color($dark-theme);

//   // Include the dark theme colors for focus indicators.
//   &.demo-strong-focus {
//     @include mat.strong-focus-indicators-color($dark-theme);
//   }
// }