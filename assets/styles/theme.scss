@use '@angular/material' as mat;
// @use 'light-theme' as lightTheme;
@use "dark-theme" as darkTheme;
@use 'sass:map';
@use "m3-theme" as m3theme;
@use "../../app/home/home.component.theme" as homeComponent;

@include mat.core();
mat.$theme-ignore-duplication-warnings: true;

@mixin create-dark-theme() {

    $theme: map.deep-merge(darkTheme.$dark-theme, (color: (background: (background:#1f1a24, ))));

    mat-card-content,
    mat-card-title {
        color: #f0f0f0;
    }

    @include mat.all-component-themes($theme);
    @include homeComponent.app-home-theme($theme);
    // @include mat.strong-focus-indicators();
    // @include mat.strong-focus-indicators-theme(lightTheme.$light-theme);


}

$my-theme: mat.define-theme((color: (theme-type: light,
                primary: mat.$blue-palette,
                tertiary: mat.$cyan-palette,
            ),
            typography: (brand-family: 'Comic Sans',
                bold-weight: 900,
            ),
        ));

html {
    // @include mat.all-component-themes($my-theme);

}

@mixin create-light-theme() {

    $theme: map.deep-merge(m3theme.$light-theme, (color: (background: (background:#f0f0f0, ))));

    @include mat.all-component-themes($theme);
    @include homeComponent.app-home-theme($theme);


    // @include mat.strong-focus-indicators-theme($theme);
    // @include mat.strong-focus-indicators();
    // @include mat.strong-focus-indicators-theme(darkTheme.$dark-theme);

}